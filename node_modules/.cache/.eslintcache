[{"C:\\Users\\RigGo\\Downloads\\pokemon timer app\\src\\index.js":"1","C:\\Users\\RigGo\\Downloads\\pokemon timer app\\src\\MainComponent.js":"2","C:\\Users\\RigGo\\Downloads\\pokemon timer app\\src\\App.js":"3"},{"size":230,"mtime":1735543186514,"results":"4","hashOfConfig":"5"},{"size":10845,"mtime":1735628859277,"results":"6","hashOfConfig":"5"},{"size":151,"mtime":1735543174852,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pkvwve",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\RigGo\\Downloads\\pokemon timer app\\src\\index.js",[],[],"C:\\Users\\RigGo\\Downloads\\pokemon timer app\\src\\MainComponent.js",["17","18"],[],"C:\\Users\\RigGo\\Downloads\\pokemon timer app\\src\\App.js",[],[],{"ruleId":"19","severity":1,"message":"20","line":26,"column":9,"nodeType":"21","endLine":35,"endColumn":4,"suggestions":"22"},{"ruleId":"19","severity":1,"message":"23","line":26,"column":9,"nodeType":"21","endLine":35,"endColumn":4,"suggestions":"24"},"react-hooks/exhaustive-deps","The 'playSound' function makes the dependencies of useEffect Hook (at line 102) change on every render. To fix this, wrap the definition of 'playSound' in its own useCallback() Hook.","VariableDeclarator",["25"],"The 'playSound' function makes the dependencies of useEffect Hook (at line 122) change on every render. To fix this, wrap the definition of 'playSound' in its own useCallback() Hook.",["26"],{"desc":"27","fix":"28"},{"desc":"27","fix":"29"},"Wrap the definition of 'playSound' in its own useCallback() Hook.",{"range":"30","text":"31"},{"range":"32","text":"31"},[1411,1742],"useCallback((soundRef) => {\r\n    if (!audioEnabled) return; // Prevent sound from playing if muted\r\n    try {\r\n      soundRef.pause();\r\n      soundRef.currentTime = 0;\r\n      soundRef.play().catch((error) => console.error(\"Audio playback error:\", error));\r\n    } catch (error) {\r\n      console.error(\"Error playing sound:\", error);\r\n    }\r\n  })",[1411,1742]]