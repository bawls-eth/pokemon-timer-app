{"ast":null,"code":"import React,{useState,useEffect,useRef}from\"react\";import\"./MainComponent.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function MainComponent(){const[activePlayer,setActivePlayer]=useState(null);const[player1Time,setPlayer1Time]=useState(20*60);const[player2Time,setPlayer2Time]=useState(20*60);const[upkeepTime,setUpkeepTime]=useState(30);const[isUpkeepActive,setIsUpkeepActive]=useState(false);const[audioEnabled,setAudioEnabled]=useState(true);const[isPaused,setIsPaused]=useState(false);const[player1Name,setPlayer1Name]=useState(\"Player 1\");const[player2Name,setPlayer2Name]=useState(\"Player 2\");const[gameStarted,setGameStarted]=useState(false);const[upkeepDefault,setUpkeepDefault]=useState(30);const[showSettings,setShowSettings]=useState(false);const[gameTime,setGameTime]=useState(20);const startGameSound=useRef(new Audio(\"/sounds/battle.mp3\"));const lowHealthSound=useRef(new Audio(\"/sounds/low-health.mp3\"));const victorySound=useRef(new Audio(\"/sounds/victory.mp3\"));const playSound=sound=>{if(audioEnabled){sound.pause();sound.currentTime=0;sound.play().catch(e=>console.error(\"Sound failed to play:\",e));}};const handleGameOver=()=>{setGameStarted(false);setActivePlayer(null);playSound(victorySound.current);};useEffect(()=>{let interval;if(gameStarted&&activePlayer){interval=setInterval(()=>{if(activePlayer===1){setPlayer1Time(prev=>{if(prev<=0){handleGameOver();return 0;}return prev-1;});}else{setPlayer2Time(prev=>{if(prev<=0){handleGameOver();return 0;}return prev-1;});}},1000);}return()=>clearInterval(interval);},[activePlayer,gameStarted]);const formatTime=seconds=>{const mins=Math.floor(seconds/60);const secs=seconds%60;return\"\".concat(mins,\":\").concat(secs.toString().padStart(2,\"0\"));};const startGame=player=>{setGameStarted(true);setActivePlayer(player);playSound(startGameSound.current);};const passTurn=()=>{setActivePlayer(prev=>prev===1?2:1);};const startUpkeep=()=>{setIsUpkeepActive(true);setUpkeepTime(upkeepDefault);};const resetUpkeep=()=>{setIsUpkeepActive(false);setUpkeepTime(upkeepDefault);};return/*#__PURE__*/_jsxs(\"div\",{className:\"game-container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"title\",children:\"Pok\\xE9mon TCG Timer\"}),!gameStarted?/*#__PURE__*/_jsxs(\"div\",{className:\"start-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>startGame(1),children:\"Start Player 1\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>startGame(2),children:\"Start Player 2\"})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"game-timers\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:player1Name}),/*#__PURE__*/_jsx(\"p\",{children:formatTime(player1Time)})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:player2Name}),/*#__PURE__*/_jsx(\"p\",{children:formatTime(player2Time)})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"controls\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:passTurn,className:\"large-button\",children:\"Pass Turn\"}),/*#__PURE__*/_jsx(\"button\",{onClick:startUpkeep,children:\"Start Upkeep\"}),/*#__PURE__*/_jsx(\"button\",{onClick:resetUpkeep,children:\"Reset Upkeep\"})]})]});}export default MainComponent;","map":{"version":3,"names":["React","useState","useEffect","useRef","jsx","_jsx","jsxs","_jsxs","MainComponent","activePlayer","setActivePlayer","player1Time","setPlayer1Time","player2Time","setPlayer2Time","upkeepTime","setUpkeepTime","isUpkeepActive","setIsUpkeepActive","audioEnabled","setAudioEnabled","isPaused","setIsPaused","player1Name","setPlayer1Name","player2Name","setPlayer2Name","gameStarted","setGameStarted","upkeepDefault","setUpkeepDefault","showSettings","setShowSettings","gameTime","setGameTime","startGameSound","Audio","lowHealthSound","victorySound","playSound","sound","pause","currentTime","play","catch","e","console","error","handleGameOver","current","interval","setInterval","prev","clearInterval","formatTime","seconds","mins","Math","floor","secs","concat","toString","padStart","startGame","player","passTurn","startUpkeep","resetUpkeep","className","children","onClick"],"sources":["C:/Users/RigGo/Downloads/pokemon timer app/src/MainComponent.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./MainComponent.css\";\r\n\r\nfunction MainComponent() {\r\n  const [activePlayer, setActivePlayer] = useState(null);\r\n  const [player1Time, setPlayer1Time] = useState(20 * 60);\r\n  const [player2Time, setPlayer2Time] = useState(20 * 60);\r\n  const [upkeepTime, setUpkeepTime] = useState(30);\r\n  const [isUpkeepActive, setIsUpkeepActive] = useState(false);\r\n  const [audioEnabled, setAudioEnabled] = useState(true);\r\n  const [isPaused, setIsPaused] = useState(false);\r\n  const [player1Name, setPlayer1Name] = useState(\"Player 1\");\r\n  const [player2Name, setPlayer2Name] = useState(\"Player 2\");\r\n  const [gameStarted, setGameStarted] = useState(false);\r\n  const [upkeepDefault, setUpkeepDefault] = useState(30);\r\n  const [showSettings, setShowSettings] = useState(false);\r\n  const [gameTime, setGameTime] = useState(20);\r\n\r\n  const startGameSound = useRef(new Audio(\"/sounds/battle.mp3\"));\r\n  const lowHealthSound = useRef(new Audio(\"/sounds/low-health.mp3\"));\r\n  const victorySound = useRef(new Audio(\"/sounds/victory.mp3\"));\r\n\r\n  const playSound = (sound) => {\r\n    if (audioEnabled) {\r\n      sound.pause();\r\n      sound.currentTime = 0;\r\n      sound.play().catch((e) => console.error(\"Sound failed to play:\", e));\r\n    }\r\n  };\r\n\r\n  const handleGameOver = () => {\r\n    setGameStarted(false);\r\n    setActivePlayer(null);\r\n    playSound(victorySound.current);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let interval;\r\n    if (gameStarted && activePlayer) {\r\n      interval = setInterval(() => {\r\n        if (activePlayer === 1) {\r\n          setPlayer1Time((prev) => {\r\n            if (prev <= 0) {\r\n              handleGameOver();\r\n              return 0;\r\n            }\r\n            return prev - 1;\r\n          });\r\n        } else {\r\n          setPlayer2Time((prev) => {\r\n            if (prev <= 0) {\r\n              handleGameOver();\r\n              return 0;\r\n            }\r\n            return prev - 1;\r\n          });\r\n        }\r\n      }, 1000);\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [activePlayer, gameStarted]);\r\n\r\n  const formatTime = (seconds) => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${mins}:${secs.toString().padStart(2, \"0\")}`;\r\n  };\r\n\r\n  const startGame = (player) => {\r\n    setGameStarted(true);\r\n    setActivePlayer(player);\r\n    playSound(startGameSound.current);\r\n  };\r\n\r\n  const passTurn = () => {\r\n    setActivePlayer((prev) => (prev === 1 ? 2 : 1));\r\n  };\r\n\r\n  const startUpkeep = () => {\r\n    setIsUpkeepActive(true);\r\n    setUpkeepTime(upkeepDefault);\r\n  };\r\n\r\n  const resetUpkeep = () => {\r\n    setIsUpkeepActive(false);\r\n    setUpkeepTime(upkeepDefault);\r\n  };\r\n\r\n  return (\r\n    <div className=\"game-container\">\r\n      <h1 className=\"title\">Pok√©mon TCG Timer</h1>\r\n      {!gameStarted ? (\r\n        <div className=\"start-buttons\">\r\n          <button onClick={() => startGame(1)}>Start Player 1</button>\r\n          <button onClick={() => startGame(2)}>Start Player 2</button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"game-timers\">\r\n          <div>\r\n            <h2>{player1Name}</h2>\r\n            <p>{formatTime(player1Time)}</p>\r\n          </div>\r\n          <div>\r\n            <h2>{player2Name}</h2>\r\n            <p>{formatTime(player2Time)}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className=\"controls\">\r\n        <button onClick={passTurn} className=\"large-button\">\r\n          Pass Turn\r\n        </button>\r\n        <button onClick={startUpkeep}>Start Upkeep</button>\r\n        <button onClick={resetUpkeep}>Reset Upkeep</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}